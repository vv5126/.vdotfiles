#!/bin/bash

source /backup/home/wgao/.profile

history_dir=$XDG_CACHE_HOME/historys
history_data=$XDG_CACHE_HOME/historys/bash_history
# history_data_bak=$XDG_CACHE_HOME/historys/bash_history_bak

function del_vim_month_ago() {
    awk '$0=NR" "$0' bash_history | sed -n '/^[0-9].* #[0-9].*$/p;' > z
    rm z;
}

function history_clean() {
    sed '
    /^ *rm /d;
    /^ *mr /d;
    /^ *git rm /d;
    /^ *ag /d;
    /^ *mv /d;
    /^ *du /d;
    /^ *fd /d;
    /^ *cd /d;
    /^ *ls/d;
    /^ *git /d;
    /^ *ga /d;
    /^ *gd /d;
    /^ *gs /d;
    /^ *man /d;
    /^ *md /d;
    /^ *mkdir /d;
    /^ *iv /d;
    /^ *which /d;
    /^ *echo /d;
    /^ *cp /d;
    /^ *df /d;
    /^ *meld /d;
    /^ *builtin /d;
    /^ *tree /d;
    /^ *cat /d;
    /^ *baidu /d;
    /^ *file /d;
    /^ *sh /d;
    /^ *bash /d;
    /^ *tree /d;
    /^ *gitk/d;
    /^ *vjson /d;
    /^ *gcc /d;
    /^ *g++ /d;
    /^ *change_toolchain /d;
    /^ *title /d;
    /^ *vsync /d;
    /^ *\.\/ /d;
    /^ *star /d;
    /^ *tar /d;
    /^ *kill /d;
    /^ *killall /d;
    /^ *ln /d;
    /^ *top /d;
    /^ *ps /d;
    ' -i $1

    sed -rn '/^.{0,7}$/!p' -i $1

    > $2
    local out
    while read line; do
        out=1

        local cmd=${line%% *}
        if [ ${#cmd} -lt 10 ]; then
            type $cmd > /dev/null 2>&1
            if [ $? -ne 0 ]; then
                echo error -- $cmd
                out=0
            fi
            # [ $? -ne 0 ] && out=0
        fi

        [ "${line:0:1}" == "#" ] && { echo "$line" >> $2; out=0; }

        [ $out == 1 ] && echo "  $line" >> $2
    done < $1
}

function history_deal() {
    local tty
    local files="$(ls $history_dir/bash_history_*)"

    for i in $files; do

        tty="${i##*_}"

        w | ag wgao | ag pts/$tty > /dev/null
        if [ $? -ne 0 ]; then
            # sed -n '/^#[0-9]\+/!p;' $i | awk '$0=NR" "$0' | sort --field-separator=" " --key=2 | uniq -f 1 | sort --human-numeric-sort - | sed -n 's/^[0-9]\+ /  /p;' >> $history_dir/bash_history
            # sed -n '/^#[0-9]\+/!p;' $i | sort | uniq | awk '$0="  "$0'  >> $history_dir/bash_history
            sed -n '/^#[0-9]\+\|^vi\|^vim/!p;' $i | sort | uniq > xxxtmp
            sed -n '/^vi\|^vim/p;' $i | awk '$0="" $0' >> $XDG_CACHE_HOME/vim/vim_list
            history_clean xxxtmp newtmp
            # cat newtmp | awk '$0="  "$0'  >> $history_dir/bash_history
            cat newtmp >> $history_dir/bash_history
            echo "#$(date +%m)" >> $history_dir/bash_history

            echo rm $i >&2
            vrm xxxtmp newtmp $i
        fi
    done

    # mv all times to new.

    awk '$0=NR" "$0' $history_dir/bash_history | sed -n '/^[0-9].* #[0-9].*$/p;' > z
    awk '$0=NR" "$0' $history_dir/bash_history | sed -n '/^[0-9].* #[0-9].*$/!p;' | sort --field-separator=" " --key=2 | uniq -f 1 -u >> z
    awk '$0=NR" "$0' $history_dir/bash_history | sed -n '/^[0-9].* #[0-9].*$/!p;' | sort --field-separator=" " --key=2 | uniq -f 1 -D > y
    match=""
    l=""
    while read line; do
        if [ "$match" != "" ]; then
            next="${line#* }"
            nl="${line%% *}"

            if [ "$next" == "$match" ]; then
                l=$(($nl>$l?$nl:$l))
            else
                echo "$l $match" >> z
                match="$next"
                l="$nl"
            fi
        else
            match="${line#* }"
            l="${line%% *}"
        fi
    done < y
    echo "$l   $match" >> z
    cat z | sort --human-numeric-sort - | sed -n 's/^[0-9]\+ //p;' > $history_dir/bash_history
    rm y z
}

# function checkstr()
# {
#     [ "${1:0:${#2}}" == "$2" ] && echo 1
# }

# function history_bak() {
#     cat $history_data $history_data_bak | sort -u > /tmp/bash_history_bak
#     mv bash_history_bak $history_data_bak
# }

history_deal
