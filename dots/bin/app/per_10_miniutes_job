#!/bin/bash

source /backup/home/wgao/.profile

json_data=$VTMP/.bash.json
history_data=$VTMP/.bash_history

function history_check() {
    local tty md5 md5_tmp

    if [ -f "$1" ]; then
        md5=$(md5sum $1)
        md5="${md5%% *}"
        tty="${1##*_}"
        eval md5_tmp="$(vjson -o md5 -k "$tty" -f $json_data)"
    else
        return 0
    fi

    # echo tty = $tty >&2
    # echo md5 = $md5 >&2
    # echo md5_tmp = $md5_tmp >&2
    if [ "$md5" != "$md5_tmp" ]; then
        return 1
    else
        return 0
    fi

}

function history_merge() {
    local tty md5

    if [ -f "$1" ]; then
        md5=$(md5sum $1)
        md5="${md5%% *}"
        tty="${1##*_}"
    else
        return 0
    fi

    while read line; do
        if [ "x${line:0:1}" != x'#' ]; then
            line="${line/\$/\\\$/}"
            line="${line/\^/\\\^/}"
            # echo echo $line
            ag "^$(string_escape_prevention 0 "  $line")$" "$history_data" > /dev/null
            if [ $? -ne 0 ]; then
                # echo add
                echo "  $line" >> $history_data
            # else
            #     echo skip
            fi
        fi
    done < $1

    echo vjson --add -o md5 -k "$tty" -s "$md5" -f "$json_data"
    vjson --add -o md5 -k "$tty" -s "$md5" -f "$json_data"
}

function history_deal() {
    local tty
    local files="$(ls $VTMP/.bash_history_*)"

    for i in $files; do

        # if change merge.
        history_check "$i"
        if [ "$?" -eq 1 ]; then
            history_merge "$i"
        fi

        tty="${i##*_}"

        w | ag wgao | ag pts/$tty > /dev/null
        if [ $? -ne 0 ]; then
            echo rm $i >&2
            vrm $i
        fi
    done
}

function checkstr()
{
    [ "${1:0:${#2}}" == "$2" ] && echo 1
}

function history_clean() {
    # cp $history_data xxxtmp
    # cp $history_data .$history_data

    sed '/^  rm /d;' $history_data > xxxtmp
    sed '/^  mr /d;' -i xxxtmp
    sed '/^  git rm /d;' -i xxxtmp
    sed '/^  ag /d;' -i xxxtmp
    sed '/^  mv /d;' -i xxxtmp
    sed '/^  du /d;' -i xxxtmp
    sed '/^  fd /d;' -i xxxtmp
    sed '/^  man /d;' -i xxxtmp
    sed '/^  md /d;' -i xxxtmp
    sed '/^  mkdir /d;' -i xxxtmp
    sed '/^  iv /d;' -i xxxtmp
    sed -rn '/^.{0,7}$/!p' -i xxxtmp

    > newtmp
    while read line; do
        local cmd=${line%% *}
        [ ${#cmd} -gt 30 ] && continue;
        # [ "$(echo $line | wc -L)" -lt 5 ] && continue;

        # [ -n "$(checkstr "$line" "git rm ")" ] && continue;
        # [ -n "$(checkstr "$line" "ag ")" ] && continue;
        # [ -n "$(checkstr "$line" "du ")" ] && continue;
        # [ -n "$(checkstr "$line" "mv ")" ] && continue;
        # [ -n "$(checkstr "$line" "fd ")" ] && continue;

        echo "  $line" >> newtmp
    done < xxxtmp

    echo '' >> $json_data
    eval tty=($(vjson -f $json_data -o md5))
    for i in ${tty[@]}; do
        w | ag wgao | ag pts/$i > /dev/null
        if [ $? -ne 0 ]; then
            echo vjson --del -f $json_data -o md5 -k $i
            vjson --del -f $json_data -o md5 -k $i
        fi
    done
}

history_deal
history_clean
