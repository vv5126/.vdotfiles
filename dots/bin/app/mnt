#!/bin/bash

include list

[ -z "$VUSER_DATA/mnt.vconf" ] && { echo "no conf file!"; exit; }

showlist_with_input $VUSER_DATA/mnt.vconf "title" "which need mount ??" $@

if [ "${title-"null"}" != "null" ]; then
    case $type in
    'sshfs')
	mount | grep "$url on $to_path" - > /dev/null
	if [ $? = 0 ]; then
	    echo 'user' | sudo fusermount -u $to_path 2>/dev/null
	    [ $(ls $to_path|wc -l)  == "0" ] && sudo rm -rf $to_path
	else
	    if [ -d $to_path ]; then
		[ $(ls $to_path|wc -l)  != "0" ] && { echo "the to_path dir isn't empty!"; exit 1; }
	    else
		sudo mkdir -p $to_path
	    fi
	    echo 'user' | sudo sshfs $url $to_path -o uid=$UID,gid=$GROUPS,allow_other || sudo rm -rf $to_path
	fi
	;;
    'win')
        mount | grep "$url on $to_path" - > /dev/null
        if [ $? = 0 ]; then
			echo 'user' | sudo umount -l $to_path 2>/dev/null
            [ $(ls $to_path|wc -l)  == "0" ] && sudo rm -rf $to_path
	    else
		    if [ -d $to_path ]; then
                [ $(ls $to_path|wc -l)  != "0" ] && { echo "the to_path dir isn't empty!"; exit 1; }
            else
                sudo mkdir -p $to_path
            fi
            [ "$user" != '-' ] && us="username=$user" || us=''
            [ "$pw" != '-' ] && ps="password=$(vdc $pw)" || ps=''
            if [ -n "$us" -o -n "$ps" ]; then
                param="-o ${us:+$us,}${ps:+$ps,}rw,dir_mode=0777,file_mode=0777"
            fi
            echo 'user' | sudo mount -t cifs $url $to_path -o vers=1.0 $param || sudo rm -rf $to_path
        fi
		;;
	esac
else
	echo "wrong number"
	echo 
fi
