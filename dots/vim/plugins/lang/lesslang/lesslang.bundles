" R
Plug 'jalvesaq/Nvim-R'

" puppet
Plug 'rodjek/vim-puppet'

" julia
Plug 'JuliaEditorSupport/julia-vim'
" Haskell
Plug 'travitch/hasksyn'
Plug 'dag/vim2hs'
Plug 'Twinside/vim-haskellConceal'
Plug 'Twinside/vim-haskellFold'
Plug 'lukerandall/haskellmode-vim'
Plug 'eagletmt/neco-ghc'
Plug 'eagletmt/ghcmod-vim'
Plug 'adinapoli/cumino'
Plug 'bitc/vim-hdevtools'

" Elixir
Plug 'elixir-lang/vim-elixir', {'for': 'elixir'}
Plug 'carlosgaldino/elixir-snippets', {'for': 'elixir'}
Plug 'mattreduce/vim-mix', {'for': 'elixir'}

" erlang
Plug 'vim-erlang/vim-erlang-runtime'
Plug 'vim-erlang/vim-erlang-omnicomplete'
Plug 'vim-erlang/vim-erlang-compiler'

" HTML
Plug 'othree/html5.vim'
Plug 'alvan/vim-closetag'
Plug 'tpope/vim-haml'
Plug 'mattn/emmet-vim'
Plug 'digitaltoad/vim-pug'

" dart
Plug 'dart-lang/dart-vim-plugin'

" Javascript
" Javascript and React syntax/indentation
Plug 'neoclide/vim-jsx-improve'
" ES Next syntax
Plug 'othree/es.next.syntax.vim'
Plug 'othree/javascript-libraries-syntax.vim'
" CoffeeScript
Plug 'kchmck/vim-coffee-script'
" Vue.js
Plug 'posva/vim-vue'
" Elm syntax
Plug 'ElmCast/elm-vim'
Plug 'othree/yajs.vim'
Plug 'moll/vim-node'
Plug 'elzr/vim-json'
Plug 'heavenshell/vim-jsdoc'
if executable('flow')
    Plug 'flowtype/vim-flow'
endif
if exists('g:evervim_js_ligatures')
    let g:javascript_conceal_function             = "Æ’"
    let g:javascript_conceal_null                 = "Ã¸"
    let g:javascript_conceal_this                 = "@"
    let g:javascript_conceal_return               = "â‡š"
    let g:javascript_conceal_undefined            = "Â¿"
    let g:javascript_conceal_NaN                  = "â„•"
    let g:javascript_conceal_prototype            = "Â¶"
    let g:javascript_conceal_super                = "Î©"
    let g:javascript_conceal_arrow_function       = "â‡’"
    let g:javascript_conceal_noarg_arrow_function = "ðŸž…"
    let g:javascript_conceal_underscore_arrow_function = "ðŸž…"
endif
if executable('flow')
    let g:javascript_plugin_flow = 1
endif

