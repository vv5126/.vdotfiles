" nmap <F2> :wa<Bar>exe "mksession! " . v:this_session<CR>:so ~/sessions/ 
" -------------------------------------------------
" -------------------------------------------------
" Gist的Vim插件
" Plug 'mattn/gist-vim'
" -------------------------------------------------
" 由注释生成文档，并且能够快速生成函数标准注释
" Plug 'vim-scripts/DoxygenToolkit.vim'
" Plug 'doxygen/doxygen'
" -------------------------------------------------
" Plug 'skywind3000/vim-terminal-help'
" Plug 'kassio/neoterm'
" Plug 'wincent/terminus'
" -------------------------------------------------
" Swap windows without ruining your layout!
Plug 'wesQ3/vim-windowswap'
" -------------------------------------------------
if 0 " 文本同级文字选取，和文本处理 推荐：****
" Plug 'kana/vim-textobj-user'
" Plug 'kana/vim-textobj-indent'
" Plug 'kana/vim-textobj-syntax'
" Plug 'kana/vim-textobj-function', { 'for':['c', 'cpp', 'vim', 'java']  }
" Plug 'sgur/vim-textobj-parameter'
" Plug 'reedes/vim-textobj-sentence'
" Plug 'reedes/vim-textobj-quote'
" Plug 'reedes/vim-wordy'
" TextObj Sentence {
    " augroup textobj_sentence
    "     autocmd!
    "     autocmd FileType markdown call textobj#sentence#init()
    "     autocmd FileType textile call textobj#sentence#init()
    "     autocmd FileType text call textobj#sentence#init()
    " augroup END
" }

" TextObj Quote {
    " augroup textobj_quote
    "     autocmd!
    "     autocmd FileType markdown call textobj#quote#init()
    "     autocmd FileType textile call textobj#quote#init()
    "     autocmd FileType text call textobj#quote#init({'educate': 0})
    " augroup END
" }
endif
" -------------------------------------------------
" Pick ALE by default, and fall back to syntastic
if !exists('g:evervim_use_syntastic')
    Plug 'w0rp/ale', {'for':'cs'}
else
    " Plug 'vim-syntastic/syntastic'
endif
" Plug 'scrooloose/syntastic'
" -------------------------------------------------
" 可以对数字, 日期, 星期, 字母进行序列填充, 方式有升序和降序, 同时可以指定step间隔.
" 给vim增加生成递增或者递减数列的功能,支持十进制,十六进制,日期,星期等,功能强大灵活
" Plug 'VisIncr'
" -------------------------------------------------
" vim-leader-guide is a vim keymap-display loosely inspired by emacs's guide-key.
" Plug 'hecal3/vim-leader-guide', {'do' : ':call DeleteLinesInFile(EverVimBundleDir(\"vim-leader-guide/autoload/leaderGuide.vim\"), \"statusline=\")'}
" -------------------------------------------------
" markdown
" Plug 'kannokanno/previm'
" Plug 'plasticboy/vim-markdown' ", {'for': 'markdown'}
" Plug 'tpope/vim-markdown'
"让Vim变成所见即所得的MarkDown文件编辑器，可以在编辑时预览最终效果。
" If you don't have nodejs and yarn
" use pre build, add 'vim-plug' to the filetype list so vim-plug can update this plugin
" see: https://github.com/iamcco/markdown-preview.nvim/issues/50

" if executable('node') && executable('yarn')
"     Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app & yarn install'  }
" else
"     Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }, 'for': ['markdown', 'vim-plug']}
" endif

" Plug 'Rykka/riv.vim', {'for': 'rst'}
" Plug 'vimwiki/vimwiki', {'branch': 'dev'}
" -------------------------------------------------
" Plug 'ap/vim-css-color'
" Plug 'skammer/vim-css-color'
" -------------------------------------------------
" 缩进代替
" Plug 'tpope/vim-sleuth'
" -------------------------------------------------
" 打开quickfix快捷键
" Plug 'Valloric/ListToggle'
" let g:lt_location_list_toggle_map = '<leader>ff'
" let g:lt_quickfix_list_toggle_map = '<leader>qq'
" let g:lt_height = 10
" -------------------------------------------------
" Plug 'jeaye/color_coded'
" let g:color_coded_enabled = 1
" let g:color_coded_filetypes = ['c', 'cpp', 'objc']
" -------------------------------------------------
"requires Vim to be compiled with Ruby support
"Plug 'wincent/command-t'
"let g:CommandTMaxHeight = 15
"noremap <leader>j :CommandT<cr>
"noremap <leader>y :CommandTFlush<cr>
" -------------------------------------------------
"Plug 'cctree'             " 可以查看function的call tree
" -------------------------------------------------
" 折叠
" Plug 'lambdalisue/vim-foldround'
" nmap <Leader>xf <Plug>(foldround-forward)
" nmap <Leader>fb <Plug>(foldround-backward)

" Plug 'tmhedberg/SimpylFold'
" Plug 'tweekmonster/braceless.vim'

setlocal foldlevel=1               " 设置折叠层数为
set nofoldenable                   " 启动 vim 时关闭折叠代码
set foldcolumn=1                   " 设置折叠区域的宽度
" Plug 'Konfekt/FastFold'
" -------------------------------------------------
" Plug 'jsfaint/gen_tags.vim'
" Plug 'gtags.vim'
" Plug 'ludovicchabant/vim-gutentags'
" Plug 'tpope/vim-git'
" -------------------------------------------------
" 结构化数据变成漂亮的表
" Plug 'Stormherz/tablify'
" -------------------------------------------------
" 检测当光标改变时，执行函数
" Plug 'hookcursormoved'
" -------------------------------------------------
" 类似emacs的king ring,给vim的yank也增加缓冲,vim本身只缓冲删除的字符串,不缓冲yank的内容,这个插件可以同时粘贴多个需要的单词等
" Plug 'YankRing.vim'
" -------------------------------------------------
" Switch very quickly between your most recently used buffers
" if has("ruby")
" Plug 'LustyJuggler'
" endif
" -------------------------------------------------
" 可以对选中的文本块执行ex操作,尤其是visual block模式下,vim自己是不支持的.选中后,:B 加上ex命令
" Plug 'navicore/vis.vim'
" -------------------------------------------------
" Plug 'itchyny/calendar.vim'
" -------------------------------------------------
if !exists('g:evervim_use_neoformat')
    " Plug 'Chiel92/vim-autoformat'
else
    " Plug 'sbdchd/neoformat'
end
" -------------------------------------------------
" Plug 'jlanzarotta/bufexplorer'
" -------------------------------------------------
" Plug 'haya14busa/incsearch.vim'
" -------------------------------------------------
Plug 'gcmt/wildfire.vim'
" -------------------------------------------------
" Plug 'bling/vim-bufferline'
" -------------------------------------------------
" search

if executable('ag')
    let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
elseif executable('ack-grep')
    let g:ackprg="ack-grep -H --nocolor --nogroup --column"
elseif executable('ack')
    Plug 'dyng/ctrlsf.vim'
    " vmap <C-E>a <Plug>CtrlSFVwordPath
    let g:ctrlsf_default_root = 'project'
endif
" -------------------------------------------------
" 可以在vim和tmux的任何组合间无缝切换
" Plug 'christoomey/vim-tmux-navigator'
" -------------------------------------------------
" have bug.
" Plug 'terryma/vim-expand-region'
" vmap v <Plug>(expand_region_expand)
" vmap <C-v> <Plug>(expand_region_shrink)
" -------------------------------------------------
" Plug 'mattn/webapi-vim' " An Interface to WEB APIs.
" -------------------------------------------------
" Plug 'cohama/agit.vim'
" -------------------------------------------------
" Plug 'jceb/vim-orgmode'
" -------------------------------------------------
" Plug 'tpope/vim-surround'
" -------------------------------------------------
" Plug 'tpope/vim-repeat'
" -------------------------------------------------
" Plug 'romainl/vim-qf'
" -------------------------------------------------




" Plug 'voldikss/vim-floaterm'

" Plug 'ervandew/supertab'

" let g:rbpt_max = 8
" let g:rbpt_loadcmd_toggle = 0
" " au VimEnter * RainbowParenthesesToggle
" au Syntax * RainbowParenthesesLoadRound
" au Syntax * RainbowParenthesesLoadSquare
" au Syntax * RainbowParenthesesLoadBraces
" au Syntax * RainbowParenthesesLoadChevrons
Plug 'alvan/vim-closetag', {'for':['html','xml','vue','php','typescriptreact','javascriptreact']}
