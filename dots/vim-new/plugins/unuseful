" vim: set filetype=vim sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
" need 将当前不用的buffer移动到win
" buffer 交换
" nnoremap <buffer> <nowait> <Leader>w w
" -------------------------------------------------

""""""""""""""""""""""""""""""
" => Python section
""""""""""""""""""""""""""""""
autocmd BufEnter *.py set cc=81 " 打开py文件81行高亮
autocmd BufNewFile,BufRead *.py,*.pyw set filetype=python
let python_highlight_all = 1
au FileType python syn keyword pythonDecorator True None False self

au BufNewFile,BufRead *.jinja set syntax=htmljinja
au BufNewFile,BufRead *.mako set ft=mako

au FileType python inoremap <buffer> $r return
au FileType python inoremap <buffer> $i import
au FileType python inoremap <buffer> $p print
au FileType python inoremap <buffer> $f #--- PH ----------------------------------------------<esc>FP2xi
au FileType python map <buffer> <leader>1 /class
au FileType python map <buffer> <leader>2 /def
au FileType python map <buffer> <leader>C ?class
au FileType python map <buffer> <leader>D ?def
autocmd FileType python set tabstop=4 shiftwidth=4 expandtab


autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete

"Delete trailing white space, useful for Python ;)
func! DeleteTrailingWS()
  exe "normal mz"
  %s/\s\+$//ge
  exe "normal `z"
endfunc
autocmd BufWrite *.py :call DeleteTrailingWS()

"python 插件
if v:version < 704
    Bundle 'Python-mode-klen'
endif
python_calltips
Bundle 'Pydiction' "补全提示+
let g:pydiction_menu_height = 20
let g:pydiction_location = '.vim/pydiction-1.2/complete-dict'
pythoncomplete  vim自带的python补全提示
VimPdb          调试Python程序+
Bundle 'pyflakes' "Python代码检查+
Bundle 'pytest'
Bundle 'pep8'
Bundle 'pyclewn'
jang
Bundle 'django_templates.vim'
Bundle 'Django-Projects'
Bundle 'djangojump'
Bundle 'hdima/python-syntax'
Bundle 'hynek/vim-python-pep8-indent'
Bundle 'kevinw/pyflakes-vim'
""""""""""""""""""""""""""""""
" => Python section end
""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""
" => JavaScript section
"""""""""""""""""""""""""""""""
au FileType javascript call JavaScriptFold()
au FileType javascript setl fen
au FileType javascript setl nocindent

au FileType javascript imap <c-t> AJS.log();<esc>hi
au FileType javascript imap <c-a> alert();<esc>hi

au FileType javascript inoremap <buffer> $r return
au FileType javascript inoremap <buffer> $f //--- PH ----------------------------------------------<esc>FP2xi

function! JavaScriptFold()
    setl foldmethod=syntax
set foldmethod=marker
    setl foldlevelstart=1
    syn region foldBraces start=/{/ end=/}/ transparent fold keepend extend

    function! FoldText()
    return substitute(getline(v:foldstart), '{.*', '{...}', '')
    endfunction
    setl foldtext=FoldText()
endfunction

" js 推荐：****
" jsbeautify的设置
" Bundle '_jsbeautify'
" nnoremap <leader>_ff :call g:Jsbeautify()<CR>
" Bundle 'JSON.vim'
" Bundle 'jQuery'
"---------------------------------------------------
""""""""""""""""""""""""""""""
" => JavaScript section end
"""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""
" => html section
""""""""""""""""""""""""""""""
"Bundle 'FredKSchott/CoVim'
let g:html_indent_inctags = "html,body,head,tbody"
let g:html_indent_script1 = "inc"
let g:html_indent_style1 = "inc"

"rkdown to HTML
nmap md :!~/.vim/markdown.pl % > %.html <CR><CR>
nmap fi :!firefox %.html & <CR><CR>
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
au FileType html setlocal dict+=~/.vim/dict/javascript.dict
au FileType html setlocal dict+=~/.vim/dict/css.dict
autocmd BufNewFile,BufRead *.html.twig set filetype=html.twig
""""""""""""""""""""""""""""""
" => html section end
""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""
" => markdown section
""""""""""""""""""""""""""""""
"markdown配置
au BufRead,BufNewFile *.{md,mdown,mkd,mkdn,markdown,mdwn}   set filetype=mkd
au BufRead,BufNewFile *.{go}   set filetype=go
au BufRead,BufNewFile *.{js}   set filetype=javascript

au FileType scale setlocal dict+=~/.vim/dict/scale.dict
au FileType javascript setlocal dict+=~/.vim/dict/javascript.dict
au FileType php setlocal dict+=~/.vim/dict/php_funclist.dict
au FileType css setlocal dict+=~/.vim/dict/css.dict
au FileType css set omnifunc=csscomplete#CompleteCSS
au FileType css setlocal omnifunc=csscomplete#CompleteCSS
au FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
""""""""""""""""""""""""""""""
" => markdown section end
""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""
" => java section
""""""""""""""""""""""""""""""
"---------------------------------------------------
"java 插件
" Bundle 'Javascript-OmniCompletion-with-YUI-and-j'
" Bundle 'JavaScript-Indent'
" Bundle 'Better-Javascript-Indentation'
" Bundle 'jslint.vim'
" Bundle 'pangloss/vim-javascript'
" coffee-scrpit support
" Bundle 'kchmck/vim-coffee-script'
"---------------------------------------------------
""""""""""""""""""""""""""""""
" => java section end
""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""
" => gvim section
""""""""""""""""""""""""""""""
" 禁止显示滚动条
set guioptions-=l
set guioptions-=L
set guioptions-=r
set guioptions-=R
"GUI界面里的字体，默认有抗锯齿
" set guifont=Inconsolata:h12
" set guifont=Courier_New:h10:cANSI   " 设置字体
" set guifont=YaHei\ Consolas\ Hybrid\ 11.5

"在gvim中高亮当前行
if (g:isGUI)
    hi cursorline guibg=#333333
    hi CursorColumn guibg=#333333
    set guifont=Consolas\ 14
    set guifontwide=Consolas\ 14
endif
"字体的设置
set guifont=Consolas,Bitstream_Vera_Sans_Mono:h9:cANSI "设置gui下的字体
set guifont=Courier_New:h10:cANSI   " 设置字体
set gfw=幼圆:h10:cGB2312
"设置隐藏gvim的菜单和工具栏 F2切换
"  set guioptions-=m
"  set guioptions-=T
"  map <silent> <F2> :if &guioptions =~# 'T' <Bar>
"         \set guioptions-=T <Bar>
"         \set guioptions-=m <bar>
"     \else <Bar>
"         \set guioptions+=T <Bar>
"         \set guioptions+=m <Bar>
"     \endif<CR>
if (g:iswindows==1)
    set gfn=Bitstream\ Vera\ Sans\ Mono:h10
else
    set gfn=Monospace\ 10
    set shell=/bin/bash
endif

set guitablabel=%t
set go=                     " 不要图形按钮
set langmenu=zh_CN.UTF-8    "菜单使用的语言
" highlight CursorLine   cterm=NONE ctermbg=black guibg=black
" highlight CursorColumn   cterm=NONE ctermbg=black guibg=black
" highlight StatusLine guifg=SlateBlue guibg=Yellow
" highlight StatusLineNC guifg=Gray guibg=White
""""""""""""""""""""""""""""""
" => gvim section end
""""""""""""""""""""""""""""""

Plug 'kien/tabman.vim'
Plug 'tpope/vim-abolish'
Plug 'chrisyip/AuthorInfo'
Plug 'alpertuna/vim-header'
Plug 'godlygeek/tabular'
Plug 'Xuyuanp/nerdtree-git-plugin', { 'on':  ['NERDTreeToggle', 'NERDTreeTabsToggle'] }
Plug 'cohama/agit.vim'
Plug 'mhinz/vim-signify'

Plug 'tpope/vim-speeddating'
Plug 'vim-scripts/a.vim'
Plug 'tyru/open-browser.vim'

" EditorConfig可以帮助在不同的编辑器和IDE上从事同一项目的多个开发人员保持一致的编码样式。
Plug 'sgur/vim-editorconfig'

Plug 'tomtom/tlib_vim'

Plug 'will133/vim-dirdiff'
let g:DirDiffExcludes = "CVS,*.class,*.exe,.*.swp, .*.cmd, *.o, .git"

Plug 'sotte/presenting.vim'
Plug 'reedes/vim-litecorrect'
