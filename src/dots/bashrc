# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth
# HISTCONTROL=erasedups       # 使用HISTCONTROL清除整个命令历史中的重复条目

# append to the history file, don't overwrite it
shopt -s histappend # 用户打开多个终端（产生多个session）情况下，共享history

HISTSIZE=1000      # 定义了 history 命令输出的记录数.
HISTFILESIZE=10000 # 定义了在 .bash_history 中保存命令的记录总数.

export HISTFILE=$HOME/.v/.bash_history
export LESSHISTFILE=$HOME/.v/.lesshst

# Where user-specific configurations should be written (analogous to /etc).
# Should default to $HOME/.config.
export XDG_CONFIG_HOME=$HOME/.v/config

# Where user-specific non-essential (cached) data should be written (analogous to /var/cache).
# Should default to $HOME/.cache.
export XDG_CACHE_HOME=$HOME/.v/.cache

# Where user-specific data files should be written (analogous to /usr/share).
# Should default to $HOME/.local/share.
export XDG_DATA_HOME=$HOME/.local/share

export FONTCONFIG_FILE="$XDG_CONFIG_HOME/fontconfig/fonts.conf"

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

[ -x /usr/bin/tput ] && PS1='\[\033[01;32m\]\u@\h\[\033[00m\] \[\033[01;34m\]\w\[\033[00m\] \$ '

alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

shopt -s expand_aliases

function include() {
    [[ "$VINCS" =~ "$1:" ]] || {
        source $1
        VINCS="$VINCS$1:"
    }
}

if [ -n "$ZSH" ]; then
    HOSTNAME="$HOST"
    export ZSH_EXPORTED_FUNCTIONS="$(functions include)"
else
    export -f include
fi

include $HOME/.bin/lib/lib.shell
include $HOME/.bin/ini/ini.shell.1

if [ -d "$VUSER" ]; then
    (
        include $VLIBS/lib.misc
        cd "$VUSER"

        if [ ! -f "../.inited" ]; then
            [ -f "init" ] && source "./init" "init"
            > "../.inited"
        fi

        listfile_md1="$(md1sum ln_list | awk '{print $1}')"
        if [ "x$(cat ../.inited)" != "x$listfile_md1" ]; then
            find $1 -type l -delete
            [ -d "bin" ] || mkdir bin
            [ -f "ln_list" ] && (cd bin; lnn_file ../ln_list)
            # [ -f "$HOME/.bin/user" ] && mr "$HOME/.bin/user"
            ln -sf "$VUSER" "$HOME/.bin/user"
            echo $listfile_md1 > "../.inited"
            echo reset - "$VHOSTID" done! >&2
        fi
    )
    # clean_invalid_ln "$VUSER"
    [ -d "$VUSER/bin" ] && add_path "$VUSER/bin"

    for i in $(ls $HOME/.bin/lib); do
        complete -F complete_for_lib $i
    done
    [ -f "$VUSER/init" ] && source "$VUSER/init" "load"
fi

include $HOME/.bin/ini/ini.shell.2

[ -f "$VTMP/init" ] && include "$VTMP/init"

[ -f $VTMP/.fzf.bash ] && source $VTMP/.fzf.bash

echo init done
