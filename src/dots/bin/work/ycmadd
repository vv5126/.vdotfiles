#!/usr/bin/env python
# -*- coding: utf-8 -*-

import shutil
import os
import cStringIO
import re
import sys


cc = ['gcc', 'mips-linux-gnu-gcc', 'mipsel-linux-android-gcc']

def prsfinc(fcontant):

    if fcontant is '':
        print 'wft.prsfinc'
        return

    prefix = "\t'-I', '"
    suffix = "',"
    retval = ""
    buf = cStringIO.StringIO(fcontant)
    tmp = buf.readline()
    while tmp is not '':
        tmp = tmp.replace('\n', '')
        newstr = (prefix + tmp + suffix)
        retval += newstr + '\n'
        tmp = buf.readline()

    return retval


def prscycm(fcontant, newins):

    if fcontant is '' or newins is '':
        print 'wtf.prcsycm'
        return
    buf = cStringIO.StringIO(fcontant)
    tmp = buf.readline()
    regxp = re.compile(r'^flags')
    regxpend = re.compile(r']$')
    flagc = 0
    newstr = ''
    while tmp is not '':
        tmp = tmp.replace('\n', '')
        if regxp.search(tmp) is not None:
            flagc = 1
        if flagc and regxpend.search(tmp) is not None:
            flagc = 0
            tmp = tmp.replace(']', '')
            tmp += '\n' + '# project inlcudes\n' + '\n'
            tmp += newins
            tmp += ']'

        newstr += tmp
        newstr += '\n'
        tmp = buf.readline()

    return newstr

def file_pretreatment(x):
    with open(x,'r') as f:
        s1 = f.read()
    s2 = s1.replace(';','\n')
    with open(x,'w') as f:
        f.write(s2)

def main(x):
    ycm_ext_ffpath = os.path.expanduser('~') + '/.vim/ycm_conf/ycm_extra_conf_c.py'
    dstfname = ".ycm_extra_conf.py"
    cur_path = os.getcwd()

    if cur_path.strip() == '':
        print 'wtf.'
        return

    if not os.path.isfile(x):
        print 'no make file!'
        return

    file_pretreatment(x)

    file_in = open(x)

    lines = file_in.read()

            # line = line.strip(' ')
            # tmp = line[0:line.find(' ')]
            # tmp = tmp[tmp.rfind('/')+1:]
            # if tmp in cc:
            #     line = line.strip('\n')
            #     line = line.split(' ')
            #     getnext = 0
            #     for n in line:
            #         if n == '-I' or n == '-i':
            #             getnext = 1
            #             continue
            #         if n[0:2] == '-I' or n[0:2] == '-i':
            #             table_add_filter(table_h,n[2:])
            #         if getnext == 1:
            #             getnext = 0
            #             table_add_filter(table_h,n)

    file_in.close()

    if not os.path.isfile(ycm_ext_ffpath):
        print "file not exist"

    try:
        shutil.copy(ycm_ext_ffpath, cur_path + '/' + dstfname)
    except (IOError, os.error) as why:
        print why
        return

    newins = prsfinc(lines)
    if newins is '':
        print 'wft.process return val'
        return
    try:
        fc = open(dstfname, 'r+')
        ycmfc = fc.read()
        fc.seek(0)
        fc.truncate()
        fc.write(prscycm(ycmfc, newins))
        fc.close()
    except (IOError, os.errno) as why:
        print 'wtf.' + why

    print 'done'


if __name__ == '__main__':
    main(sys.argv[1])
