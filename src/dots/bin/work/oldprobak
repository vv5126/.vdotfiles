#!/bin/bash

function git_bak_list() {
	local BAKDIR=''
	BAKDIR=${1%\/*}/git_bak/${1##*\/}
	cd $BAKDIR
	ls -F | grep /$ | {
		while read line; do
			echo ${line%/*}
		done
	}
	exit
}

function git_cover() {
	local BAKDIR=''
    project_name=${1##*\/}
	BAKDIR=${1%\/*}/git_bak/${1##*\/}/$2
	if [ -d "$BAKDIR" ];then
        source $BAKDIR/$project_name.vk
        [ "$need_clone" == 1 ] && git clone $remote $project_name
        git checkout $branch
        git reset --hard $commit
		cp -rf $BAKDIR/$project_name/* $1
        git apply $project_name.patch
	else
		echo "NO BAKDIR"
	fi
	exit
}

function git_bak() {

    local branch=
	local BAKDIR=''
	local FILE=''
	local DIR_T=''
	local line=''
    local need_clone=0

	BAKDIR=${1%\/*}/git_bak/${1##*\/}/${1##*\/}_$(date +%Y%m%d_%H-%M)
	[ $# -eq 2 ] && BAKDIR=$BAKDIR-$2

	if [ -d "$BAKDIR" ]; then
		rm $BAKDIR/ -rf
		rm $BAKDIR.tar.gz
		echo rm $BAKDIR
	fi

	echo baking......
	mkdir -p $BAKDIR

    project_name=${1##*\/}

    >"$project_name.vk"
    echo "project_name=$project_name" >> "$BAKDIR/$project_name.vk"
    echo "need_clone=$need_clone" >> "$BAKDIR/$project_name.vk"
    remote=$(git remote -v | grep -s '(fetch)'| awk '{print $2}')
    echo "remote=$remote" >> "$BAKDIR/$project_name.vk"
    branch=$(git branch | grep "*" | awk '{print $2}')
    echo "branch=$branch" >> "$BAKDIR/$project_name.vk"
    commit=$(git log --oneline -1 | awk '{print $1}')
    echo "commit=$commit" >> "$BAKDIR/$project_name.vk"

    git diff HEAD > $BAKDIR/$project_name.patch

    mkdir $BAKDIR/$project_name
	git status -s | {
		while read line; do
			[ -n "$line" -a "${line% *}" = "??" ] && {
			    FILE=${line##* }

    			[[ "$FILE" =~ "/" ]] && {
	    			DIR_T=${FILE%/*} && mkdir -p $BAKDIR/$project_name/$DIR_T/
	    			[ ${FILE:0-1} = "/" ] && cp -drf $1/$FILE/* $BAKDIR/$project_name/$DIR_T/ || cp -d $1/$FILE $BAKDIR/$project_name/$DIR_T/
	    		} || {
	    			cp -d $1/$FILE $BAKDIR/$project_name/
	    		}
			}
		done
	}

	cd ${BAKDIR%\/*}
	FILE=${BAKDIR##*\/}
	tar -Pzcf $FILE.tar.gz $FILE
	echo "finished!"
}

PROJECT_DIR_NAME=`getdir_git_repo | awk '{print $1}'`
PROJECT_DIR=`getdir_git_repo | awk '{print $2}'`

cd $PROJECT_DIR

if [ -n "$PROJECT_DIR_NAME" -a $# -gt 0 ];then
	if [ $1 == "bak" ]; then
		[ $# -eq 2 ] && git_bak $PROJECT_DIR $2 || git_bak $PROJECT_DIR
	elif [ $1 == "baklist" ]; then
		git_bak_list $PROJECT_DIR
	elif [ $1 == "cover" ]; then
		[ $# -eq 2 ] && git_cover $PROJECT_DIR $2
	fi
fi

