#! /usr/bin/env python3
# -*- coding: utf-8 -*-

import argparse
from vpri import cprint, select_list, filetpye_guess, is_suffix

# send
from email import encoders
from email.header import Header
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
import smtplib

# get
import poplib
from email.parser import Parser
from email.header import decode_header
from email.utils import parseaddr

from_addr = "wei.gao@ingenic.com"
password = "asd123456"
to_addr = "wei.gao@ingenic.com"
smtp_server = "mail.ingenic.com"
smtp_port = 25


def sendmail():
    if multipart == True:
        msg = MIMEMultipart()
    else:
        msg = MIMEText('hello, send by Python...', 'plain', 'utf-8')

    msg['From'] = u'Python爱好者 <wei.gao@ingenic.com>'
    msg['To'] = u'管理员 <"wei.gao@ingenic.com">'
    msg['Subject'] = Header(u'来自SMTP的问候……', 'utf-8').encode()

    server = smtplib.SMTP(smtp_server, smtp_port)
    if need_tls == True:
        server.starttls()
    server.set_debuglevel(1)
    server.login(from_addr, password)
    server.sendmail(from_addr, [to_addr], msg.as_string())
    server.quit()

# add file:
    if attach:
        msg.attach(MIMEText('send with file...', 'plain', 'utf-8'))
        # msg.attach(MIMEText('<html><body><h1>Hello</h1>' +
        #     '<p>send by <a href="http://www.python.org">Python</a>...</p>' +
        #     '</body></html>', 'html', 'utf-8'))

        kind = filetpye_guess(attach)
        if kind is 'png':
            with open('./wash_mode_bg.png', 'rb') as f:
                mime = MIMEBase('image', 'png', filename=attach)
        elif kind is '':
            pass
        mime.add_header('Content-Disposition', 'attachment', filename=attach)
        mime.add_header('Content-ID', '<0>')
        mime.add_header('X-Attachment-Id', '0')
        mime.set_payload(f.read())
        encoders.encode_base64(mime)
        msg.attach(mime)

'''
# get
def guess_charset(msg):
    charset = msg.get_charset()
    if charset is None:
        content_type = msg.get('Content-Type', '').lower()
        pos = content_type.find('charset=')
        if pos >= 0:
            charset = content_type[pos + 8:].strip()
    return charset

def decode_str(s):
    value, charset = decode_header(s)[0]
    if charset:
        value = value.decode(charset)
    return value

def print_info(msg, indent=0):
    if indent == 0:
        for header in ['From', 'To', 'Subject']:
            value = msg.get(header, '')
            if value:
                if header=='Subject':
                    value = decode_str(value)
                else:
                    hdr, addr = parseaddr(value)
                    name = decode_str(hdr)
                    value = u'%s <%s>' % (name, addr)
            print('%s%s: %s' % ('  ' * indent, header, value))
    if (msg.is_multipart()):
        parts = msg.get_payload()
        for n, part in enumerate(parts):
            print('%spart %s' % ('  ' * indent, n))
            print('%s--------------------' % ('  ' * indent))
            print_info(part, indent + 1)
    else:
        content_type = msg.get_content_type()
        if content_type=='text/plain' or content_type=='text/html':
            content = msg.get_payload(decode=True)
            charset = guess_charset(msg)
            if charset:
                content = content.decode(charset)
            print('%sText: %s' % ('  ' * indent, content + '...'))
        else:
            print('%sAttachment: %s' % ('  ' * indent, content_type))

# email = raw_input('Email: ')
# password = raw_input('Password: ')
# pop3_server = raw_input('POP3 server: ')
email1 = "wei.gao@ingenic.com"
password = "asd123456"
pop3_server = "mail.ingenic.com"

server = poplib.POP3(pop3_server)
#server.set_debuglevel(1)
print(server.getwelcome())
# 认证:
server.user(email1)
server.pass_(password)
print('Messages: %s. Size: %s' % server.stat())
resp, mails, octets = server.list()
# 获取最新一封邮件, 注意索引号从1开始:
resp, lines, octets = server.retr(len(mails))
# 解析邮件:
print(type(lines))
for i in lines:
    if "b'Message-ID" in str(i):
        print(i)
        break
msg = Parser().parsestr('\r\n'.join('%s' %id for id in lines))
# 打印邮件内容:
print(msg)
# Message-ID: <5B7D1B78.9080704@ingenic.com>
server.quit()
'''

def main():
    parser = argparse.ArgumentParser(description='manual to this script')
    parser.add_argument('--from_addr', type=str, nargs='?', const=True, default=False)
    parser.add_argument('--to', type=str, nargs='?', const=True, default=False)
    parser.add_argument('--password', type=str, nargs='?', const=True, default=False)
    parser.add_argument('--smtp_server', type=str, nargs='?', const=True, default=False)
    parser.add_argument('--smtp_port', type=str, nargs='?', const=True, default=False)
    parser.add_argument('--tls', type=bool, nargs='?', const=True, default=False)
    parser.add_argument('--multipart', type=bool, nargs='?', const=True, default=False)
    parser.add_argument('--attach', type=str, nargs='?', const=True, default=False)

    parser.add_argument('-f', '--configfile', type = str, default = None)

    args = parser.parse_args()

    if args.configfile == None:
        print('error!!!')
        return -1

    if args.from_addr:
        from_addr = args.from_addr
    elif args.to:
        to_addr = args.to
    elif args.password:
        password = args.password
    elif args.smtp_server:
        smtp_server = args.smtp_server
    elif args.smtp_port:
        smtp_port = args.smtp_port
    elif args.tls:
        need_tls = args.tls
    elif args.multipart:
        multipart = args.multipart
    elif args.attach:
        attach = args.attach

    sendmail()

if __name__ == '__main__':
    main()
