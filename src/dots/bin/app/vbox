#!/bin/bash
# 集成终端下指令

function canup() {
    (cd $HOME/.vdotfiles
    [ x"$(git log --oneline -1 remotes/origin/master | awk '{print $1}')" != x"$(git log --oneline -1 | awk '{print $1}')" ] && echo can! || echo bad!)
}

function win2unix() {
    local i
    [ $# -eq 0 ] && return
    for i in $@; do
        iconv -f gb2312 -t utf-8 $i > /tmp/win2unix.tmp 2>/dev/null
        [ $? -eq 0 ] && mv /tmp/win2unix.tmp $i
    done
}

# vim的增强版
function svi(){
    local STR FILE LINE
    if [ $# -ne 0 ]; then
        STR=$1
        FILE=${STR%%:*}
        LINE=${STR#*:}
        LINE=${LINE%%:*}

        expr $LINE + 0 &>/dev/null
        [ $? -eq 0 ] && LINE="+$LINE" || LINE=''

        STR=''
        [ ! -f "$FILE" -a "$PWD" != "$HOME" ] && STR="$(fd $FILE)"
        [ -n "$STR" ] && FILE="$STR"

        [ -f "$FILE" ] && vim $FILE ${LINE:+$LINE}
    fi
    # printf "\e[?2004l"
}

function ci() {
	include $VLIBS/lib.list

	showlist_with_input $VGL_DATA/go.vconf "dest" "copy ID to where ??" $@
	[ -n "$dest" ] && ssh-copy-id $dest
}

function asd() {
    if [[ "$VHOSTID" == "$VMAINID" ]]; then
	gedit "$VGL_DATA"/.asd &
    else
	ssh -X "$WORK_SERVER_SSH" 'source $HOME/.v.bash; gedit $VGL_DATA/.asd' &
    fi
}

function g() {
    include $VLIBS/lib.list

    if [[ $# -eq 1 && "$1" =~ "@" ]]; then
	DEST="$1"
	echo "$DEST" >> $VGL_DATA/go.vconf
    else
	showlist_with_input $VGL_DATA/go.vconf "dest" "go where ??" $@
	DEST="$dest"
    fi

    if [ -n "$DEST" ]; then
	ssh -X $DEST
    else
	echo "wrong number"
	echo 
    fi
}

# 反转上一次操作
function ccd(){
        for i in {1..3}; do
                local try_old_dir="$(history | tail -n $((i+1)) | head -1)"
                local para1=$(echo $try_old_dir | awk '{print $2}')
                local para2=$(echo $try_old_dir | awk '{print $3}')
                local para3=$(echo $try_old_dir | awk '{print $4}')
                [ -n "$para2" -a -n "$para3" ] && { $para1 $para3 $para2; return; }
		# only mv ??
        done
}

# find的增强版
function find1(){
    set +f
    if [ $# -ne 0 ]; then
        STR=${1%%:*}
        FILE=${STR##*/}
        eval find "${2:+\"$2\" }"-name \""$FILE"\"
    fi
}

eval $(basename $0) $@
