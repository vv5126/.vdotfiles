#!/bin/bash

########## delete

########## export

########## statistics
function number_of_dir() {
    ls -lR $target |grep "^d"|wc -l
}

function number_of_all_file() {
    ls -lR $target |grep "^-"|wc -l
}

########## export
########## export
########## export

function export_file_to_dir() {
    while read line; do
	[ -f "$line" ] && { mkdir -p $target/${line%/*}; ln -s "$PWD/$line" $target/$line; }
	# [ -f "$line" ] && { mkdir -p $target/${line%/*}; cp -P "$line" $target/$line; }
    done < $list_file
}
function clean_duplicate_line() {
    sort -k2n $file | uniq > $target
}

function delete_empty_dir_and_file() {
    find $target -type d -empty | xargs rm -rf -
}

function clean_kernel_debug() {
    sed -n 's/^\[.*\] //p;' $target
}

function delete_empty_file() {
    find $target -name "*" -type f -size 0c | xargs -n 1 rm -f
}

file_tools="
export list to dir with struct
export list to dir only struct
sort
"

dir_tools="
export dir with struct
export dir only struct
export dir link with struct
export dir to list
export dir to list with md5
export dir to md5
delete empty dir
delete empty file
delete empty dir and file
number of all file
number of type file
number of dir
size of type file
"

target="$1"

IFS=$'\n'
if [ -d "$target" ]; then
    select var in $dir_tools; do
	break;
    done
elif [ -f "$target" ]; then
    select var in $file_tools; do
	break;
    done
fi

IFS=$'\n\t '
${var//\ /_}

# files in list copy to new dir
