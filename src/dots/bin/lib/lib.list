#!/bin/bash

function show_message(){
    local max=0
    for i in $1; do
        ((${#i} > $max)) && ((max=${#i}))
    done

    kuang=$(printf "%-"$(($max+4))"s" "*")

    echo -e "\e[40;33m"${kuang// /*}"\033[0m"
    for i in $1; do
        if [ $(($max-${#i})) -eq 0 ]; then
            echo -e "\e[40;33m"'*' "${i//_/ }" '*'"\033[0m"
        else
            end=$(printf "%-"$(($max-${#i}))"s" " ")
            echo -e "\e[40;33m"'*' "${i//_/ }" "${end// / }"'*'"\033[0m"
        fi
    done
    echo -e "\e[40;33m"${kuang// /*}"\033[0m"
}



function get_input(){
    local input
    echo -en "$1 >>> " >&2
    read input
    [ -n "$input" ] && echo "$input"
}


#showlist file title
function showlist(){
	local NUM=0
	local NO=0
	local DEST=''
	local maybe_num=${@##* }

	expr $maybe_num + 0 &>/dev/null
	if [ $? -eq 0 ]; then
		NUM=$maybe_num
	else
		echo >&2
		NO=1
		while read line; do
			if [ -n "$line" -a "${line:0:1}" != '#' ]; then
				echo -e "  \e[40;33m$NO\033[0m >> \033[40;32m$line\033[0m">&2
				NO=$[$NO+1]
			fi
		done < "$1"
		echo -en "\n  $2  >>> ">&2
		read NUM
	fi

	echo >&2

	expr $NUM + 0 &>/dev/null
	if [ $? -eq 0 ]; then
		NO=1
		while read line; do
			if [ -n "$line" -a "${line:0:1}" != '#' ]; then
				if [ $NUM -eq $NO ]; then
					DEST=$line
					break
				fi
				NO=$[$NO+1]
			fi
		done < "$1"
	fi
	[ -n "$DEST" ] && echo $DEST || echo 0
}

function onlyshowlist(){
	echo >&2
	NO=1
	while read line; do
		if [ -n "$line" ]; then
			echo -e "  \e[40;33m$NO\033[0m >> \033[40;32m$line\033[0m">&2
			NO=$[$NO+1]
		fi
	done < "$1"
	echo >&2
}

function addlist(){
	local lastargs=${!#}
	while [ $# -gt 1 ]; do
		echo $1 >> $lastargs
		shift
	done
}

function getline(){
	# echo $(head -$2 $1 | tail -1)
        expr $2 + 0 &>/dev/null
        if [ $? -eq 0 ]; then
            NO=1
            while read line; do
                if [ -n "$line" -a "${line:0:1}" != '#' ]; then
                    [ $2 -eq $NO ] && echo "$line"
                    NO=$[$NO+1]
                fi
            done < "$1"
        fi
}

function showlist_with_value(){
	local NUM=0
	local NO=0
	local DEST=''
	local maybe_num=${@##* }

	expr $maybe_num + 0 &>/dev/null
	if [ $? -eq 0 ]; then
		NUM=$maybe_num
	else
		echo >&2
		NO=1
		while read line; do
			if [ -n "$line" -a "${line:0:1}" != '#' ]; then
				line=${line%%=*}
				echo -e "  \e[40;33m$NO\033[0m >> \033[40;32m$line\033[0m">&2
				NO=$[$NO+1]
			fi
		done < "$1"
		echo -en "\n  $2  >>> ">&2
		read NUM
	fi

	echo >&2

	expr $NUM + 0 &>/dev/null
	if [ $? -eq 0 ]; then
		NO=1
		while read line; do
			if [ -n "$line" -a "${line:0:1}" != '#' ]; then
				if [ $NUM -eq $NO ]; then
					line=${line#*=}
					DEST=$line
					break
				fi
				NO=$[$NO+1]
			fi
		done < "$1"
	fi
	[ -n "$DEST" ] && {
		echo $DEST
		return 0
	} || return 1
}

function user_select() {
	local NUM=0
	local NO=0
	local DEST=
	local value=
	local info="$1"
        local custom="$([ $# -eq 3 ] && echo $3)" # 是否允许自定义 1,0

        set "$2"
	echo >&2
	NO=1
	for value in $@; do
		echo -e "  \e[40;33m$NO\033[0m >> \033[40;32m$value\033[0m">&2
		NO=$[$NO+1]
	done
	echo -en "\n  $info  >>> ">&2
	read NUM

	expr $NUM + 0 &>/dev/null
	if [ $? -eq 0 ]; then
		NO=1
		for value in $@; do
			if [ $NUM -eq $NO ]; then
				DEST=$value
				break
			fi
			NO=$[$NO+1]
		done
	        [ -n "$DEST" ] && { echo $DEST; return 0; }
        elif [ "$custom" == '1' ]; then
            echo "$NUM"
            return -1
	fi
}

function showlist_with_tab(){
	local NUM=0
	local NO=0
	local DEST=''
	local maybe_num=${@##* }
	local file=$1
	local tab='$'"$2"
	local for_user=$3

	expr $maybe_num + 0 &>/dev/null
	if [ $? -eq 0 ]; then
		NUM=$maybe_num
	else
		echo >&2
		NO=1
		while read line; do
			if [ -n "$line" -a "${line:0:1}" != '#' ]; then
				line="$(echo $line | awk '{print '$tab'}')"
				echo -e "  \e[40;33m$NO\033[0m >> \033[40;32m$line\033[0m">&2
				NO=$[$NO+1]
			fi
		done < "$file"
		echo -en "\n  $for_user  >>> ">&2
		read NUM
	fi

	echo >&2

	expr $NUM + 0 &>/dev/null
	if [ $? -eq 0 ]; then
		NO=1
		while read line; do
			if [ -n "$line" -a "${line:0:1}" != '#' ]; then
				if [ $NUM -eq $NO ]; then
					DEST="$line"
					break
				fi
				NO=$[$NO+1]
			fi
		done < "$file"
	fi
	[ -n "$DEST" ] && {
                set -f
		echo $DEST
                set +f
		return 0
	} || return 1
}



############# export ##############

# if [ -n "$ZSH" ]; then
# else
#     export -f showlist
#     export -f onlyshowlist
#     export -f addlist
#     export -f getline
#     export -f showlist_with_value
#     export -f user_select
#     export -f showlist_with_tab
# fi

########### export end ############

[[ "${0##*/}" =~ "lib.list" ]] && $@
