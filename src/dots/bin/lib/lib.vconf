
function vconf_filter() {
    local mode=$1 in_f="$2" out_f="$3"

    case "$mode" in
        '0') # vconf_filter_mode0 不过滤
            ;;
        '1') # vconf_filter_mode1 只滤行
            cat $in_f \
                | sed -n -e '1 p' -e '/^#/!p;' \
                >&1
            # > $out_f
            ;;
        '2') # vconf_filter_mode2 只滤列
            cat $in_f \
                | sed '1 s/^#/ /' \
                | sed '/^$/d;' \
                | sed 's/^#\ /_/' \
                | sed 's/[^_]/+ &/' \
                | awk '{for(i=0;++i<=NF;)a[i]=a[i]?a[i] FS $i:$i}END{for(i=0;i++<NF;)print a[i]}' \
                | sed -n '/^#/!p;' \
                | awk '{for(i=0;++i<=NF;)a[i]=a[i]?a[i] FS $i:$i}END{for(i=0;i++<NF;)print a[i]}' \
                | sed 's/^+//' \
                | sed 's/^_+/#/' \
                | sed '1 s/^/#/' \
                | sed 's/^\ *//' \
                >&1
            ;;
        '3') # vconf_filter_mode3 行列都滤
            cat $in_f \
                | sed '1 s/^#/ /' \
                | sed '/^$/d;' \
                | sed -n '/^#/!p;' \
                | awk '{for(i=0;++i<=NF;)a[i]=a[i]?a[i] FS $i:$i}END{for(i=0;i++<NF;)print a[i]}' \
                | sed -n '/^#/!p;' \
                | awk '{for(i=0;++i<=NF;)a[i]=a[i]?a[i] FS $i:$i}END{for(i=0;i++<NF;)print a[i]}' \
                | sed '1 s/^/# /' \
                >&1
            # > $out_f
            ;;
    esac
}

function vconf_format() {
    trap "set +f" 1 2 3 15; set -f

    local tmp_file=.tmp_$(cat /dev/urandom | LC_CTYPE=C tr -dc '0-9a-zA-Z' | fold -w 6 | head -n 1)
    sed -i 's/^#\ /__/g' $1

    local max_num num new_line line column row=1
    column=$(sed -n 1p $1 | awk '{print NF}')

    for num in $(seq 1 $column); do
        max_num=1
        for i in $(cat $1 | awk "{print \$$num}"); do
            [ "${#i}" -gt "$max_num" ] && max_num="${#i}"
        done
        eval line_$num=$max_num
    done

    > $tmp_file
    while read line; do
        new_line=''
        for num in $(seq 1 $column); do
            tmp=$(echo $line | awk "{print \$$num}")
            eval space="\$((\$line_$num-${#tmp}))"
            [ "${tmp:0:2}" == '__' -a "$row" != '1' ] && space=$(($space+2))
            if [ "$column" == "$num" -o "$space" == 0 ]; then
                new_line="$new_line $tmp"
            else
                new_line="$new_line $tmp$(printf "%-"$space"s" " ")"
            fi
        done
        echo "${new_line# *}" >> $tmp_file
        ((row+=1))
    done < $1

    mv $tmp_file $1

    # vim -c "1,$(sed -n '$=' "$1")EasyAlign *\ " -c "exit" "$1"
    sed -i 's/^__/#\ /g' $1
}

# vconf文件解析
function vconf() { # 要求：名字必须.conf结尾，第一行为magic code，#开头; 其他"#"开头为注释，有效行以空格分隔每项。
    trap "set +f" 1 2 3 15; set -f

    include $VLIBS/lib.misc

    local list vconf_file var_str num i tmp vconf_title exp='' ret=0 lines
    local col=$(get_param -c $@)
    local row=$(get_param -r $@)
    local rownum=$(get_param -rn $@)
    local mode=$(get_param -m $@)
    local col1=$(get_param -g $@)
    local addline=$(get_param -a $@)
    local delline=$(get_param -d $@)
    local file=$(get_param '' $@)
    local format=$(get_param --reset $@)

    [ "${file: -6}" == '.vconf' -a -f $file ] || return

    vconf_file=/tmp/vconf_$(cat /dev/urandom | LC_CTYPE=C tr -dc '0-9a-zA-Z' | fold -w 6 | head -n 1)
    vconf_filter 3 $file > $vconf_file
    lines=$(sed -n '$=' "$vconf_file")

    vconf_title="$(head -n 1 $vconf_file)"
    list=(${vconf_title//\#/ })

    num=1
    for i in ${vconf_title//#/ }; do
        eval var_str=\"\$var_str \${$i:--}\"
        eval $i="$num"
        ((num+=1))
    done

    [ "$(is_num $col)" == 0 ] && eval col=\$"$col"
    [ "$(is_num $col1)" == 0 ] && eval col1=\$"$col1"

    if [ -n "$row" -o -n "$rownum" ]; then
        if [ -z "$rownum" ]; then
            [ -z "$col" ] && return -1

            num=1
            for i in $(cat $vconf_file | sed -n 1'!p;' | awk "{print \$$col}"); do
                if [ "$i" == "$row" ]; then
                    rownum=$num
                    break
                fi
                ((num+=1))
            done
        fi
    fi

    if [  -n "$row" -a -z "$rownum" ]; then
        ret=-1
    elif [ "$(is_num $col1)" == 1 -a "$(is_num $rownum)" == 1 ]; then
        echo "$(cat $vconf_file | sed -n "$(($rownum+1))"'!p;' || awk "{print \$$col1}")"
    elif [ "$(is_num $rownum)" == 1 ]; then
        if [ -n "$addline" -o -n "$delline" ]; then
            num=1 tmp=0
            while read line; do
                [ "${line:0:1}" != '#' ] && ((tmp+=1))
                [ "$tmp" == "$rownum" ] && break
                ((num+=1))
            done < $file

            [ -n "$(is_num $delline)" ] && sed "$num"'d;' -i $file
            [ -n "$(is_num $addline)" ] && eval sed "$(($num-1))"'a'\"$var_str\" -i $file

        elif [ "$mode" == 'l' ]; then
            echo "$rownum"
        elif [ "$mode" == 'p' ]; then
            echo "$(cat $vconf_file | sed -n $(($rownum+1))'p;')"
        else
            num=0
            for i in $(cat $vconf_file | sed -n $(($rownum+1))'p;'); do
                eval ${list[$num]}="\$i"
                ((num+=1))
            done
            [ "$lines" -ge "$rownum" ] && exp=1
        fi
    elif [ "$(is_num $col)" == 1 ]; then
        echo "$(cat $vconf_file | sed -n 1'!p;' | awk "{print \$$col}")"
    else
        echo "unsupport!"
    fi
    rm $vconf_file
    [ -n "$format" ] && vconf_format $file

    if [ -z "$exp" ]; then
        for i in ${vconf_title//#/ }; do
            eval unset $i
        done
    fi

    return $ret
}

############# export ##############

# if [ -n "$ZSH" ]; then
# else
# fi

########### export end ############

[[ "${0##*/}" =~ "lib.vconf" ]] && $@
