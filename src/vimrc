"必须的设置：
filetype off
filetype plugin indent on
"打开高亮
syntax enable
"不要兼容vi
set nocompatible "不要vim模仿vi模式，建议设置，否则会有很多不兼容的问题

"使用color solarized
set background=dark "背景使用黑色
"colorscheme solarized
colorscheme mycolor
"terminal下面的背景问题
let g:solarized_termtrans=1
let g:solarized_termcolors=256
let g:solarized_contrast="high"
let g:solarized_visibility="high"

set modelines=0

"tab键的设定
set tabstop=4               " 设定 tab 长度为 4
set shiftwidth=4            " 设定 << 和 >> 命令移动时的宽度为 4
set softtabstop=4           " 使得按退格键时可以一次删掉 4 个空格
set expandtab               " 用空格代替制表符

"一些其他的设定
"字符设置
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5
"set encoding=utf-8
set scrolloff=3
"新建文件编码
set fenc=utf-8
set autoindent
set hidden                  " 允许在有未保存的修改时切换缓冲区，此时的修改由 vim 负责保存
"设置光标高亮显示
set cursorline
set cursorline              " 突出显示当前行
"set cursorcolumn
set ttyfast
set ruler                   " 打开状态栏标尺
set backspace=indent,eol,start
"set laststatus=2
"相对行号 要想相对行号起作用要放在显示行号后面
"set relativenumber
"显示行号
set number
"无限undo
"set undofile
"自动换行
"set wrap
"禁止自动换行
set nowrap
"GUI界面里的字体，默认有抗锯齿
set guifont=Inconsolata:h12
"自动载入配置文件不需要重启
"autocmd! bufwritepost _vimrc source %
"将-连接符也设置为单词
set isk+=-

"设置大小写敏感和聪明感知(小写全搜，大写完全匹配)
set ignorecase
set smartcase
"set gdefault
set incsearch
" 高亮显示匹配的括号
set showmatch
set hlsearch

"加入html标签配对
"runtime macros/matchit.vim

"以下设置用来是vim正确显示过长的行
"set textwidth=80
"set formatoptions=qrnl
"彩色显示第85行
set colorcolumn=85
"设置256色显示
set t_Co=256

"行号栏的宽度
set numberwidth=4
"初始窗口的宽度
"set columns=135
"初始窗口的高度
"set lines=50
"初始窗口的位置
"winpos 620 45

"匹配括号的规则，增加针对html的<>
"set matchpairs=(:),{:},[:],<:>
"让退格，空格，上下箭头遇到行首行尾时自动移到下一行（包括insert模式）
set whichwrap=b,s,<,>,[,]

"插入模式下移动
inoremap <c-j> <down>
inoremap <c-k> <up>
inoremap <c-l> <right>
inoremap <c-h> <left>

"===================================================
"leader键的功能设置
"修改leader键为逗号
let mapleader=","
"esc的映射
imap jj <esc>
"屏蔽掉讨厌的F1键
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>
"修改vim的正则表达
nnoremap / /\v
vnoremap / /\v
"使用tab键来代替%进行匹配跳转
nnoremap <tab> %
vnoremap <tab> %
"折叠html标签 ,fold tag
nnoremap <leader>ft vatzf
"使用,v来选择刚刚复制的段落，这样可以用来缩进
nnoremap <leader>v v`]
"使用,w来垂直分割窗口，这样可以同时查看多个文件,如果想水平分割则<c-w>s
nnoremap <leader>w <c-w>v<c-w>l
nnoremap <leader>wc <c-w>c
nnoremap <leader>ww <c-w>w
"使用<leader>t来控制Tab的切换
nnoremap <leader>t gt
nnoremap <leader>r gT
"使用<leader>空格来取消搜索高亮
nnoremap <leader><space> :noh<cr>
"html中的js加注释 取消注释
nmap <leader>h I//jj
nmap <leader>ch ^xx
"切换到当前目录
nmap <leader>q :execute "cd" expand("%:h")<CR>
"搜索替换
nmap <leader>s :,s///c

"取消粘贴缩进
nmap <leader>p :set paste<CR>
nmap <leader>pp :set nopaste<CR>

"文件类型切换
nmap <leader>fj :set ft=javascript<CR>
nmap <leader>fc :set ft=css<CR>
nmap <leader>fx :set ft=xml<CR>
nmap <leader>fm :set ft=mako<CR>

"设置隐藏gvim的菜单和工具栏 F2切换
set guioptions-=m
set guioptions-=T
"去除左右两边的滚动条
set go-=r
set go-=L

map <silent> <F2> :if &guioptions =~# 'T' <Bar>
        \set guioptions-=T <Bar>
        \set guioptions-=m <bar>
    \else <Bar>
        \set guioptions+=T <Bar>
        \set guioptions+=m <Bar>
    \endif<CR>

"开启鼠标支持
set mouse=a
"查找并启用tag
:set tags=tags;

" Space to command mode.
nnoremap <space> :
vnoremap <space> :

"===================================================
"插件的设置

" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles

if ! isdirectory($HOME."/.vim/bundle/vundle")
    echo "you should setup vundle frist!"
    echo "use \"git clone http://github.com/gmarik/vundle.git ~/.vim/bundle/vundle\""
else

"刷新插件
nmap <F10> :BundleInstall<cr>
"更新插件
nmap <S-F9> :BundleSearch<cr>

"Indent Guides设置
let g:indent_guides_guide_size=1

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required!
Bundle 'gmarik/vundle'

"jsbeautify的设置
Bundle '_jsbeautify'
nnoremap <leader>_ff :call g:Jsbeautify()<CR>  

"EasyMotion设置
Bundle 'EasyMotion'
let g:EasyMotion_leader_key = '<Leader><Leader>' 

"Fencview的初始设置
Bundle 'FencView.vim'
let g:fencview_autodetect=1

"NerdTree的设置 并且相对行号显示
"-----------------------------------------------------------------
" plugin - NERD_tree.vim 以树状方式浏览系统中的文件和目录
" :ERDtree 打开NERD_tree         :NERDtreeClose    关闭NERD_tree
" o 打开关闭文件或者目录         t 在标签页中打开
" T 在后台标签页中打开           ! 执行此文件
" p 到上层目录                   P 到根目录
" K 到第一个节点                 J 到最后一个节点
" u 打开上层目录                 m 显示文件系统菜单（添加、删除、移动操作）
" r 递归刷新当前目录             R 递归刷新当前根目录
"-----------------------------------------------------------------
Bundle 'The-NERD-tree'
nmap <leader>nt :NERDTree<cr>:set rnu<cr>
"nmap  <F3> :NERDTreeToggle<cr>
"imap <F3> <ESC>:NERDTreeToggle<CR>
let NERDTreeShowBookmarks=1
let NERDTreeShowFiles=1
let NERDTreeShowHidden=1
let NERDTreeIgnore=['\.$','\~$']
let NERDTreeShowLineNumbers=1
let NERDTreeWinPos=1

"对NERD_commenter的设置
"-----------------------------------------------------------------
" plugin - NERD_commenter.vim   注释代码用的，
" [count],cc 光标以下count行逐行添加注释(7,cc)
" [count],cu 光标以下count行逐行取消注释(7,cu)
" [count],cm 光标以下count行尝试添加块注释(7,cm)
" ,cA 在行尾插入 /* */,并且进入插入模式。 这个命令方便写注释。
" 注：count参数可选，无则默认为选中行或当前行
"-----------------------------------------------------------------
Bundle 'The-NERD-Commenter'
let NERDSpaceDelims=1       " 让注释符与语句之间留一个空格
let NERDCompactSexyComs=1   " 多行注释时样子更好看
let NERDShutUp=1
"支持单行和多行的选择，//格式
map <c-h> ,c<space>

" vim-scripts repos
Bundle 'ctrlp.vim'
"Bundle 'AutoClose'
Bundle 'ZenCoding.vim'
Bundle 'matchit.zip'
Bundle 'ShowTrailingWhitespace'

Bundle 'neocomplcache'
"Bundle 'ack'
Bundle 'gundo'
"Bundle 'pytest'
Bundle 'supertab'
"Bundle 'vim-git'
"Bundle 'vim-powerline'
Bundle 'command-t'
Bundle 'pep8'
"Bundle 'pyflakes-pathogen'
Bundle 'snipMate'
"Bundle 'TaskList.vim'
Bundle 'fugitive.vim'
"Bundle 'vim-makegreen'
"Bundle 'vim-surround'

" plugin - taglist.vim  查看函数列表，需要ctags程序
Bundle 'taglist.vim'
nmap  <F2> :TlistToggle<cr>
"nnoremap <silent><F4> :TlistToggle<CR>
let Tlist_Show_One_File = 1            " 不同时显示多个文件的tag，只显示当前文件的
let Tlist_Exit_OnlyWindow = 1          " 如果taglist窗口是最后一个窗口，则退出vim
let Tlist_Use_Right_Window = 1         " 在右侧窗口中显示taglist窗口
let Tlist_File_Fold_Auto_Close=1       " 自动折叠当前非编辑文件的方法列表
let Tlist_Auto_Open = 0                " 默认打开Taglist
let Tlist_Auto_Update = 1
let Tlist_Hightlight_Tag_On_BufEnter = 1
let Tlist_Enable_Fold_Column = 0    " 不要显示折叠树
let Tlist_Process_File_Always = 1 "不是一直实时更新tags，因为没有必要
let Tlist_Display_Prototype = 0
let Tlist_Compact_Format = 1

Bundle 'biogoo.vim'
Bundle 'calendar.vim'
Bundle 'gtrans.vim'

endif
"===================================================

" wgao add

let g:pydiction_location = '.vim/pydiction-1.2/complete-dict'
nmap  <F4> :!mk<cr>
nmap  <F9> :!mktag &<cr>

"支持代码折叠
set foldmethod=syntax " 用语法高亮来定义折叠
set foldlevel=100 " 启动vim时不要自动折叠代码
set foldcolumn=1 " 设置折叠栏宽度
": exec 'cd ~/' . fnameescape('/.vim')
" 用<F3>键来开关折叠
nmap <F3> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>

set   wildignore=*.bak,*.o,*.e,*~

" No sound on errors
set noerrorbells            " 关闭错误信息响铃
set novisualbell            " 关闭使用可视响铃代替呼叫
set t_vb=                   " 置空错误铃声的终端代码
"-----------------------------------------------------------------
" plugin - NeoComplCache.vim    自动补全插件
"-----------------------------------------------------------------
let g:AutoComplPop_NotEnableAtStartup = 1
let g:NeoComplCache_EnableAtStartup = 1
let g:NeoComplCache_SmartCase = 1
let g:NeoComplCache_TagsAutoUpdate = 1
let g:NeoComplCache_EnableInfo = 1
let g:NeoComplCache_EnableCamelCaseCompletion = 1
let g:NeoComplCache_MinSyntaxLength = 3
let g:NeoComplCache_EnableSkipCompletion = 1
let g:NeoComplCache_SkipInputTime = '0.5'
let g:NeoComplCache_SnippetsDir = $VIMFILES.'/snippets'
" <TAB> completion.
inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
" snippets expand key
imap <silent> <C-e> <Plug>(neocomplcache_snippets_expand)
smap <silent> <C-e> <Plug>(neocomplcache_snippets_expand)

" Fast saving
nmap <leader>w :w!<cr>
nmap <leader>qq :qa!<cr>

" Fast editing of the .vimrc
map <leader>e :e! ~/.vimrc<cr>

" When vimrc is edited, reload it
autocmd! bufwritepost .vimrc source ~/.vimrc
