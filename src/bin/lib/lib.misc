#!/bin/bash

# xxx line separator from to
function get_segment_from_line() {
        line="$1"
        count=0
        ret=''

        [ $# -ne 3 ] && return 1;
        while true; do
                ((count+=1))
                s=${line%% *}
                line=${line#* }

                [ $count -ge $2 -a $count -le $3 ] && ret="$ret $s"
                [ "x$s" == "x$line" ] && break
        done
        echo "${ret# *}"
}

function get_param() {
        # 不支持参数带空格哦
        # 参数必须以'-'开始，且只能是一个字母，好像数字也行

        [ $# -lt 2 ] && return -1;

        local got=0
        local success=0
        local param_num=0
        local keyword=${1:1}
        local p
        local para
        shift

        for p in "$@"; do
                if [ "${p:0:1}" == '-' ]; then
                        while [ -n "${p:1:1}" ]; do
                                if [ "${p:1:1}" == "$keyword" ]; then
                                        got=1
                                        success=1
                                else
                                        got=0
                                fi
                                p=${p:1}
                        done
                else
                        if [ "$got" -eq 1 ]; then
                                para="$para $p"
                                ((param_num+=1))
                        fi
                fi
        done

        [ -n "$para" ] && echo "$para"
        [ $success -eq 0 ] && return -1 || return $param_num
}


function get_script_dir() {
    SOURCE="$0"
    while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
        DIR="$( cd -P "$( dirname "$SOURCE"   )" && pwd   )"
        SOURCE="$(readlink "$SOURCE")"
        [[ $SOURCE != /*   ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
    done
    DIR="$( cd -P "$( dirname "$SOURCE"   )" && pwd   )"
    echo DIR = $DIR
}

function mem(){
	echo mem > /sys/power/state
}


function read_key() {
	local key=$1
	local table=$2

	if [ -f "$table" ]; then
		while read line; do
			if [ "$key" = "${line%=*}" ]; then
				echo "${line#*=}"
				break
			fi
		done < "$table"
	fi
}

nicemount() { (echo "DEVICE PATH TYPE FLAGS" && mount | awk '$2=$4="";1') | column -t; }

function ls_file()
{
    local level=$1
    find . -maxdepth $level -type f | sed 's/^\.\///g' >&1
}

function ls_dir()
{
    local level=$1
    find . -maxdepth $level -type d | sed '1d;s/^\.\///g' >&1
}

############# will export ##############

export -f get_script_dir
export -f mem
export -f read_key
export -f nicemount
export -f ls_file
export -f ls_dir

########### will export end ############
