#!/bin/bash

function getdir(){
	local TARGET=$1
	local PROJECT_DIR=
	local BASE_DIR=~/
	local DIR=$PWD

	while [ "$BASE_DIR" != "$DIR/" ];do
		[ -f "$DIR/$TARGET" -o -d "$DIR/$TARGET" ] && { PROJECT_DIR=$DIR; break; } || PROJECT_DIR=
		DIR=${DIR%\/*}
	done
	echo "$PROJECT_DIR"
}

function vcd(){
	local DIR=~
	local TARGET=
	[ -d "$DIR/$1" ] && TARGET=$1
	[ -f "$DIR/$1" ] && TARGET=${1%/*}
	[ -z "$1" ] && { TARGET=$(getdir .git); [ -z "$TARGET" ] && TARGET=$(getdir .repo); }
	[ -z "$TARGET" -a -n "$1" ] && { TARGET=$[${#1}+1]; TARGET=$(seq -s "../" $TARGET); TARGET=${TARGET//[0-9]/}; }
	[ -n $TARGET ] && cd $TARGET
}

function cd_repo(){
	local TARGET=
	TARGET=$(getdir .repo)
	[ -n $TARGET ] && cd $TARGET
}

function mktag(){
	local TARGET=
	TARGET=$(getdir .git)
	[ -n "$TARGET" ] && cd $TARGET
	[ $# -eq 1 ] && [ $1 == "up" ] && {
		ctags -R * #-exclude "arm"
		return
	}
	[ -f "tags" ] && {
		echo 
		echo -e " \e[40;33m"found TAGS : $PROJECT_DIR/tags"\033[0m"
		echo 
	} || {
		ctags -R * #-exclude "arm"
		return
	}
}

function mklist(){
	local DIR=
	local LISTFILE='list'
	local BAKDIR=`pwd`
	local line=''
	local NUM=0

	[ $# -eq 1 ] && [ -f $1 ] && LISTFILE=$1
	[ -f "$LISTFILE" ] || { echo no listfile; echo 'listdir=xxx' > $LISTFILE; echo '#put the opposite dir' >> $LISTFILE; return; }
	read line < $LISTFILE
	[[ $line =~ "=" ]] && [ -d "${line##*=}" ] && BAKDIR=${line##*=} || echo "${line##*=}"
	#BAKDIR=_$(date +%Y-%m-%d_%H-%M)
	echo BAKDIR = $BAKDIR
	echo LISTFILE = $LISTFILE

	while read line; do
		if [ "${line:0:1}" = "#" ]; then
			echo "jump ${line:1}"
		elif [ -d "$line" ]; then
			mkdir -p $BAKDIR/$line
			cp -r $line/* $BAKDIR/$line/
			NUM=$[$NUM+1]
		elif [ -f "$line" ]; then
			mkdir -p $BAKDIR/${line%/*}
			cp $line $BAKDIR/${line%/*}/
			NUM=$[$NUM+1]
		fi
	done < "$LISTFILE"
	echo "list mk done! total $NUM. "
}

function getdir_project(){

local COMP_DIR=~/
local BASE_DIR=$PWD
local DIR=$BASE_DIR
local PROJECT_DIR_NAME=
local PROJECT_DIR=

while [ "$COMP_DIR" != "$DIR/" ];do
	if [ -f "$DIR/k.sh" ]; then
		PROJECT_DIR_NAME='KERNEL_DIR'
		PROJECT_DIR=$DIR
		break
	elif [ -f "$DIR/u.sh" ]; then
		PROJECT_DIR_NAME='UBOOT_DIR'
		PROJECT_DIR=$DIR
		break
	elif [ -f "$DIR/a.sh" ]; then
		PROJECT_DIR_NAME='ANDROID_DIR'
		PROJECT_DIR=$DIR
		break
	elif [ -f "$DIR/t.sh" ]; then
		PROJECT_DIR_NAME='TIZEN_DIR'
		PROJECT_DIR=$DIR
		break
	elif [ -f "$DIR/m.sh" ]; then
		PROJECT_DIR_NAME='MODELE_DIR'
		PROJECT_DIR=$DIR
		break
	elif [ -f "$DIR/app.sh" ]; then
		PROJECT_DIR_NAME='NORMAL_DIR'
		PROJECT_DIR=$DIR
		break
	else
		PROJECT_DIR_NAME=
		PROJECT_DIR=
	fi
	DIR=${DIR%\/*}
done

echo "$PROJECT_DIR_NAME $PROJECT_DIR"

}


function getdir_git(){

local COMP_DIR=~/
local DIR=$PWD
local GIT_DIR_NAME=
local GIT_DIR=

while [ "$COMP_DIR" != "$DIR/" ];do
	if [ -d "$DIR/.git" ]; then
		GIT_DIR_NAME='GIT_DIR'
		GIT_DIR=$DIR
		break
	fi
	DIR=${DIR%\/*}
done

echo "$GIT_DIR_NAME $GIT_DIR"

}

############# will export ##############

export -f getdir
export -f vcd
export -f cd_repo
export -f mktag
export -f mklist
export -f getdir_project
export -f getdir_git

########### will export end ############
