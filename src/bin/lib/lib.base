#!/bin/bash

function quickcd() {
        local tmp
	if [ "$#" -eq 0 ]; then
                local try_old_dir="$(history | tail -n 2 | head -1)"
                try_old_dir="${try_old_dir##* }"
                [ "${try_old_dir:0:1}" == '~' ] && try_old_dir="$HOME${try_old_dir:1}"
                if [ -d "$try_old_dir" ]; then
                        cd "$try_old_dir"
                else
                        cd ~
                fi
        elif [ -d "$1" ]; then
                cd $1
        else
                [ -d "${1%\/*}" ] && { cd "${1%\/*}"; return; }
                [[ "$1" =~ ":~" ]] && { cd $HOME"${1##*:~}"; return; }
                [[ "$1" =~ ":" ]] && { cd "${1##*:}"; return; }
                [ $1 = "-" ] && { cd $OLDPWD; return; }
                [ $1 = "clean" ] && { > ~/.cdlist; return; }
                [ $# -eq 2 ] && [ $1 = "add" ] && { echo "$2 `pwd`" >> ~/.cdlist; return; }
                [ $# -eq 1 -a -f "$HOME/.cdlist" ] && {
                        while read line; do
                                [ $1 = "${line% *}" ] && { cd ${line#* }; return; }
                        done < ~/.cdlist
                }
                tmp="$(find -maxdepth 1 -type d -name "$1*")"; [ $? -eq 0 -a -d "$tmp" ] && { cd "$tmp"; return; }
	fi
}


function is_local() {
	para=$*
	if [[ "$para" =~ "@" ]] && [[ "$para" =~ ":" ]]; then
		return 1
	else
		return 0
	fi
}


function smkdir() {
	dst=$1

	is_local $dst
	if [ $? = 0 ]; then
		mkdir -p $dst
	else
		ssh ${dst%:*} "[ -d "${dst##*:}" ] || mkdir -p ${dst##*:}"
	fi
}


function srm() {
	src=$*
	for i in $src; do
		is_local $i
		if [ $? = 0 ]; then
			rm $i
		else
			ssh ${i%:*} "rm -rf ${i##*:}"
		fi
	done
}


function smv() {
	para="$*"
	scp -r $para
	if [ $? = 0 ]; then
		src="${para% *}"
		is_local "$src"
		if [ $? = 0 ]; then
			rm $src
		else
			srm $src
		fi
	fi
}


############# will export ##############

export -f is_local
export -f smkdir
export -f srm
export -f smv

########### will export end ############
