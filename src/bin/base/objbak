#!/bin/bash

text(){
    [ -n "$2" ] && echo "[  OK  ] $1=$2" || echo "[ FAIL ] $1=$2"

}

function bak(){
    src=$1
    dest=$1_whole_bak_$(date +%Y%m%d_%H-%M)

tmp=/tmp/.bak.tmp

[ -d "$src/.git" ] && echo baking ...... || exit

# get source

cd $src

git reflog > $tmp
while read line; do
    # if [[ "$line" =~ "reset:" ]]; then
    if [[ "$line" =~ "pull:" ]]; then
        commit="${line%% *}"
        break
    fi
done < $tmp
rm $tmp

branch=$(git branch | grep '*' | awk '{print $2}')
remote=$(git remote -v | head -2 | tail -1 | awk '{print $2}')

text commit $commit
text dest   $dest
text branch $branch

# get source end
[ -z "$commit" ] && {
    echo "can't find pull log!"
    exit
}

git reset --soft $commit
# git stash --keep-index
text remote $remote
git stash -a

mkdir ../$dest

echo "remote=\"$remote\"" > ../$dest/info
echo "branch=\"$branch\"" >> ../$dest/info
echo "commit=\"$commit\"" >> ../$dest/info

git diff HEAD stash@{0} > ../$dest/patch

git stash pop

cd -

tar -zcvf $dest.tar.gz $dest
# rm -r $dest

echo bak done!
exit
BAKDIR=${1%\/*}/git_bak/${1##*\/}/${1##*\/}_$(date +%Y%m%d_%H-%M)
}

function cover(){
src=$1
dest=${src%%.tar.gz*}
# dest=${src%%-whole_bak*}-whole_bak

# tar -xf $src

echo src = $src
echo dest = $dest
cd $dest
# echo $PWD

dest=${dest%%_whole_bak*}
source ./info

echo last commit = $commit
echo branch $branch
echo remote $remote

# git clone $remote $dest

cd $dest

git checkout $branch

git reset --hard $commit

patch -p 1 < ../patch

echo cover done!
}

bak $@
# cover $@
